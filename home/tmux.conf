# colors
set -g default-terminal "screen-256color"

# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

#Reload the tmux.conf with prefix-r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Use capital letters to swap panes
# bind -r H swap-pane -L

# Use arrows to resize panes
# -r allows key-bindings to be repeated without requiring the prefix-key
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Split mode using keys that are easier to remember
# Navigates to current path for new pane
bind - split-window -v -c '#{pane_current_path}'
bind \ split-window -h -c '#{pane_current_path}'

# New windows start from current path
bind c new-window -c '#{pane_current_path}'

# Navigate to previous window
#bind-key -r C-h select-window -t :-
# Navigate to next window
#bind-key -r C-l select-window -t :+

bind-key C-a last-window

# set prefix to backtick
unbind C-b
set -g prefix `
bind-key ` send-prefix

# entering copy-mode
bind-key -n C-k copy-mode

# copy mode mappings
bind-key u copy-mode \; send-keys u-up # enter copy mode on <leader>1
bind-key -t vi-copy u page-up
bind-key -t vi-copy d page-down

# v and y like vi in copy-mode
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# enable mouse selection and scrolling
setw -g mouse-select-pane off
# setw -g mode-mouse on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# set correct color mode
setw -g automatic-rename on
# setw -g automatic-rename-format "#{pane_current_path}"

set -g base-index 1

set -g utf8 on

set -g status-left-length 25

set -g status-right ""

# remove escape delay
set -s escape-time 0

# custom mappings
bind-key \; command-prompt

# break pane into new window
bind b break-pane -d

# Pull up choose-tree to navigate between multiple windows quickly and easily
bind C-j choose-tree

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# window selection
unbind-key M-o; bind-key -n M-o next-window
unbind-key M-y; bind-key -n M-y previous-window
unbind-key M-1      ; bind-key -n M-1   select-window -t 1
unbind-key M-2      ; bind-key -n M-2   select-window -t 2
unbind-key M-3      ; bind-key -n M-3   select-window -t 3
unbind-key M-4      ; bind-key -n M-4   select-window -t 4
unbind-key M-5      ; bind-key -n M-5   select-window -t 5
unbind-key M-6      ; bind-key -n M-6   select-window -t 6
unbind-key M-7      ; bind-key -n M-7   select-window -t 7
unbind-key M-8      ; bind-key -n M-8   select-window -t 8
unbind-key M-9      ; bind-key -n M-9   select-window -t 9
unbind-key M-0      ; bind-key -n M-0   select-window -t 10
